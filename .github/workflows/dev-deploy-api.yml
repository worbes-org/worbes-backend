name: Deploy API (Dev)

on:
  push:
    branches:
      - dev
    paths:
      - 'application/**'
      - 'adapter/persistence/**'
      - 'adapter/web/**'
      - 'bootstrap/worbes-api/**'
      - 'build.gradle'
      - 'settings.gradle'
jobs:
  deploy-api:
    runs-on: ubuntu-latest
    steps:
      # 빌드 & 푸시
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: aprileaf/worbes-api:dev
          file: ./bootstrap/worbes-api/Dockerfile
          cache-from: type=registry,ref=aprileaf/worbes-api:buildcache
          cache-to: type=registry,ref=aprileaf/worbes-api:buildcache,mode=max

  deploy:
    needs: deploy-api
    if: success()
    environment: dev
    runs-on: [ self-hosted, api-server-a ]
    steps:
      - name: Checkout compose.dev.yml
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            compose.dev.yml
          sparse-checkout-cone-mode: false

      - name: Create .env
        run: echo "${{ secrets.ENV }}" > .env.dev

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker compose pull
        run: docker compose -f compose.dev.yml pull worbes-api

      - name: Docker compose up
        run: docker compose -f compose.dev.yml up -d worbes-api

      - name: Remove unused Docker images
        run: docker image prune -af

      - name: Clean up runner workspace
        if: always()
        run: |
          shopt -s dotglob
          rm -rf $GITHUB_WORKSPACE/*
